@model VolleyManagement.UI.Areas.Mvc.ViewModels.GameResults.GameResultViewModel

@{
    ViewBag.Title = "Game result";
}

<h2>Details</h2>
<hr />
@Html.HiddenFor(model => model.TournamentId)

<div class="form-group">
    Teams:
    @Html.EditorFor(model => model.HomeTeamName, new { htmlAttributes = new { @class = "form-control", disabled = "" } })
    : @Html.EditorFor(model => model.AwayTeamName, new { htmlAttributes = new { @class = "form-control", disabled = "" } })
</div>

<div class="form-group">
    Sets score:
    @Html.EditorFor(model => model.SetsScore.Home, new { htmlAttributes = new { @class = "form-control", disabled = "" } })

    @Html.EditorFor(model => model.SetsScore.Away, new { htmlAttributes = new { @class = "form-control", disabled = "" } })
</div>

<div class="form-group">
    <label for="@Model.IsTechnicalDefeat">
        Technical defeat:
        @if (Model.IsTechnicalDefeat)
        {
            <span>@Html.EditorFor(model => model.IsTechnicalDefeat, new { htmlAttributes = new { disabled = "" } })</span>
        }
        else
        {
            <span>@Html.EditorFor(model => model.IsTechnicalDefeat)</span>
        }
    </label>
</div>

@for (int i = 0; i < Model.SetScores.Count; i++)
{
    <div class="form-group">
        Set #@(i + 1):
        @Html.EditorFor(model => model.SetScores[i].Home, new { htmlAttributes = new { @class = "form-control", disabled = "" } })

        @Html.EditorFor(model => model.SetScores[i].Away, new { htmlAttributes = new { @class = "form-control", disabled = "" } })
    </div>
}

<div class="form-group">
    <div class="col-md-offset-2 col-md-10">
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id }, new { @class = "btn btn-default" })
    </div>
</div>
