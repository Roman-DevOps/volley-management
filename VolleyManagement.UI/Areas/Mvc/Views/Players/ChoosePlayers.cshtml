@model VolleyManagement.UI.Areas.Mvc.ViewModels.Players.PlayersListViewModel

@{
    ViewBag.Title = Resources.PlayerViews.ChoosingPlayers;
}
<script src="~/Scripts/jquery-1.10.2.js"></script>
<h2>@ViewBag.Title</h2>

<div>
    @using (@Html.BeginForm("Index"))
    {
        @Html.Label(Resources.PlayerViews.SearchTitle)
        @Html.TextBox("textToSearch", Model.TextToSearch)
    }
</div>
@Html.ActionLink(Resources.PlayerViews.CreateNewPlayer, "Create")

<script src="~/Scripts/UserActions.js" type="text/javascript"></script>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.List.FirstOrDefault().FullName)
        </th>
        <th>
        </th>
        <th class="hidden">
        </th>
    </tr>

    @foreach (var item in Model.List)
    {
        <tr>
            <td>
                @item.FullName
            </td>
            <td>
                @item.Id
            </td>
            <td>
                <input type="button" name="choosePlayerButton" value="@Resources.PlayerViews.AddPlayerToTeam" />
            </td>
        </tr>
    }

</table>
@{
    int firstPage = 1;
    int secondPage = 2;
    int pageBefore = Model.PageNumber - 1;
    int pageAfter = Model.PageNumber + 1;
}

@if (Model.PageNumber != firstPage && Model.List.Count != 0)
{
    @Html.ActionLink(firstPage.ToString(), "Index", new { page = (firstPage), textToSearch = Model.TextToSearch });
}

@if (pageBefore > firstPage && Model.List.Count != 0)
{
    if (pageBefore > secondPage)
    {
        <b>...</b>
    }
    @Html.ActionLink(pageBefore.ToString(), "Index", new { page = (pageBefore), textToSearch = Model.TextToSearch });
}

@if (Model.List.Count != 0)
{
    @Model.PageNumber
}

@if (pageAfter < Model.NumberOfPages && Model.List.Count != 0)
{
    @Html.ActionLink(pageAfter.ToString(), "Index", new { page = (pageAfter), textToSearch = Model.TextToSearch });
                                                                                                                  if (pageAfter < Model.NumberOfPages - 1)
                                                                                                                  {
                                                                                                                    <b>...</b>
                                                                                                                  }
}

@if (Model.PageNumber != Model.NumberOfPages && Model.List.Count != 0)
{
    @Html.ActionLink(Model.NumberOfPages.ToString(), "Index", new { page = (Model.NumberOfPages), textToSearch = Model.TextToSearch })
}


@if (Model.List.Count == 0)
{
    <p>@Resources.PlayerViews.NotFoundPlayerMessage</p>
}

@Html.Hidden("DeleteConfirmationMessage", Resources.PlayerViews.DeleteConfirmationMessage)