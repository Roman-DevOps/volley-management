@using VolleyManagement.UI.Areas.Mvc
@using ValidationKeys = VolleyManagement.Domain.Constants.Tournament;
@model VolleyManagement.UI.Areas.Mvc.ViewModels.Tournaments.TournamentViewModel
@* This partial view defines form fields that will appear when creating and editing entities *@

<link rel="stylesheet" href="https://code.jquery.com/ui/1.9.2/themes/base/jquery-ui.css" />
<script src="https://code.jquery.com/jquery-1.8.3.js" type="text/javascript"></script>
<script src="https://code.jquery.com/ui/1.9.2/jquery-ui.js" type="text/javascript"></script>

<div class="editor-label">
    @Html.LabelFor(model => model.Name)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Name)
    @Html.ValidationMessage(ValidationKeys.UNIQUE_NAME_KEY)
    @Html.ValidationMessageFor(model => model.Name)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Description)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.Description)
    @Html.ValidationMessageFor(model => model.Description)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Season)
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.Season, new SelectList(Model.SeasonsList, "Key", "Value", Model.SelectedSeason))
    @Html.ValidationMessageFor(model => model.Season)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.Scheme)
</div>
<div class="editor-field">
    @Html.DropDownListFor(model => model.Scheme)
    @Html.ValidationMessageFor(model => model.Scheme)
</div>

<div class="editor-label">
    @Html.LabelFor(model => model.RegulationsLink)
</div>
<div class="editor-field">
    @Html.EditorFor(model => model.RegulationsLink)
    @Html.ValidationMessageFor(model => model.RegulationsLink)
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#ApplyingPeriodStart").datepicker({ dateFormat: 'yy.mm.dd' });
        $("#ApplyingPeriodEnd").datepicker({ dateFormat: 'yy.mm.dd' });
        $('#GamesStart').datepicker({ dateFormat: 'yy.mm.dd' });
        $("#GamesEnd").datepicker({ dateFormat: 'yy.mm.dd' });
        $("#TransferStart").datepicker({ dateFormat: 'yy.mm.dd' });
        $("#TransferEnd").datepicker({ dateFormat: 'yy.mm.dd' });

        var transfer_fields = $(".transfer-field");
        $("#transferDatesSwitcher").change(function () {
            transfer_fields.attr("disabled", !this.checked);
            if (!this.checked) {
                transfer_fields.attr("value", "");
            }
        });
    });
</script>
<div class="editor-label">
    @Html.Label(Resources.TournamentViews.RefistrationFieldsTitle)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.ApplyingPeriodStart, new { @readonly = "readonly" })
    -
    @Html.TextBoxFor(model => model.ApplyingPeriodEnd, new { @readonly = "readonly" })

    @Html.ValidationMessage(ValidationKeys.APPLYING_START_DATE_AFTER_END_DATE)
    @Html.ValidationMessage(ValidationKeys.APPLYING_START_BEFORE_NOW)
    @Html.ValidationMessageFor(model => model.ApplyingPeriodStart)
    @Html.ValidationMessage(ValidationKeys.APPLYING_PERIOD_LESS_THREE_MONTH)
    @Html.ValidationMessageFor(model => model.ApplyingPeriodEnd)
</div>

<div class="editor-label">
    @Html.Label(Resources.TournamentViews.TournamentFieldsTitle)
</div>
<div class="editor-field">
    @Html.TextBoxFor(model => model.GamesStart, new { @readonly = "readonly" })
    -
    @Html.TextBoxFor(model => model.GamesEnd, new { @readonly = "readonly" })

    @Html.ValidationMessage(ValidationKeys.APPLYING_END_DATE_AFTER_START_GAMES)
    @Html.ValidationMessageFor(model => model.GamesStart)
    @Html.ValidationMessage(ValidationKeys.START_GAMES_AFTER_END_GAMES)
    @Html.ValidationMessage(ValidationKeys.TRANSFER_END_AFTER_GAMES_END)
    @Html.ValidationMessageFor(model => model.GamesEnd)
</div>
<div class="checkbox_transfer">
    @Html.CheckBoxFor(model => model.TransferEnabled, new { id = "transferDatesSwitcher" })
    @Html.Label(Resources.TournamentViews.TransferFieldsTitle, new { @for = "transferDatesSwitcher" })
</div>
<div class="editor-field">
    @Html.Raw(Html.TextBoxFor(model => model.TransferStart, new { @readonly = "readonly", @class = "transfer-field", disabled = "disabled" }).ToHtmlString().Replace("disabled=\"disabled\"", (Model.TransferEnabled ? "" : "disabled=\"disabled\"")))
    -
    @Html.Raw(Html.TextBoxFor(model => model.TransferEnd, new { @readonly = "readonly", @class = "transfer-field", disabled = "disabled" }).ToHtmlString().Replace("disabled=\"disabled\"", (Model.TransferEnabled ? "" : "disabled=\"disabled\"")))

    @Html.ValidationMessage(ValidationKeys.TRANSFER_PERIOD_BEFORE_GAMES_START)
    @Html.ValidationMessageFor(model => model.TransferStart)
    @Html.ValidationMessage(ValidationKeys.TRANSFER_END_BEFORE_TRANSFER_START)
    @Html.ValidationMessageFor(model => model.TransferEnd)
</div>