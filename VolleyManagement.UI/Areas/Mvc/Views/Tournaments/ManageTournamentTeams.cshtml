@model VolleyManagement.UI.Areas.Mvc.ViewModels.Tournaments.TournamentTeamsListReferrerViewModel
@using Resources.UI

@{
    ViewBag.Title = "ManageTournamentTeams";
}

<h2>@TournamentViews.ManageTeams</h2>

<div>
    @Html.HiddenFor(model => model.Model.TournamentId, new { id = "TournamentId" })
    <table id="tornamentRoster" class="table">
        <tr>
            <th>@Html.DisplayNameFor(model => model.Model.List.FirstOrDefault().Name)</th>
            <th class="hidden"></th>
        </tr>
        @foreach (var item in Model.Model.List)
        {
            <tr>
                <td>@Html.ActionLink(item.Name, "Details", "Teams", new {id = item.Id, returnUrl = Model.Referer}, null)</td>
                <td><button class="deleteTeamFromTournamentButton" id="@item.Id">Delete</button></td>
            </tr>
        }
    </table>
    <div style="margin-bottom: 30px;">
        <button id="addTeamToTournamentButton" class="btn btn-success">+ Add team </button>
    </div>
        <button id="addTeamsButton" class="btn btn-default">Save</button>
        @Html.ActionLink(@TournamentViews.Cancel, "Details", new { id = Model.Model.TournamentId }, new { @class = "btn btn-default" })

        <script type="text/javascript">
            (function () {
                "use strict";

                var currNs = VM.addNamespace("tournament.addTeams");
                currNs.deleteConfirmMessage = "@TournamentViews.DeleteTournamentTeamConfirm";
                currNs.teamIsNotSelectedMessage = "@TournamentViews.TournamentTeamIsNotSelected";

            })();

        </script>
    </div>
@Scripts.Render("~/bundles/tournamentteamsscripts")
