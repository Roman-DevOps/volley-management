@model VolleyManagement.UI.Areas.Mvc.ViewModels.Tournaments.TournamentViewModel
@using VolleyManagement.Domain.Tournaments
@using VolleyManagement.UI.Areas.Mvc;

@{
    ViewBag.Title = Resources.TournamentViews.TournamentDetailsTitle;
}

<h2>@ViewBag.Title</h2>

<fieldset>
    <legend>@Resources.TournamentViews.TournamentLegend</legend>

    <div class="display-label">@Html.LabelFor(model => model.Name)</div>
    <div class="display-field">@Model.Name</div>

    <div class="display-label">@Html.LabelFor(model => model.Description)</div>
    <div class="display-field">@Html.DisplayFor(model => model.Description)</div>

    <div class="display-label">@Html.LabelFor(model => model.Season)</div>
    <div class="display-field">@Html.DisplaySeason(Model.Season)</div>

    <div class="display-label">@Html.LabelFor(model => model.Scheme)</div>
    <div class="display-field">@Model.Scheme.ToDescription()</div>

    <div class="display-label">@Html.LabelFor(model => model.RegulationsLink)</div>
    @if (!string.IsNullOrEmpty(Model.RegulationsLink))
    {
        <div class="display-field">
            <a href=@Model.RegulationsLink target="_blank">@Model.RegulationsLink</a>
        </div>
    }

    <div class="display-label">@Html.LabelFor(model => model.ApplyingPeriodStart)</div>
    <div class="display-field">@Model.ApplyingPeriodStart.ToShortDateString()</div>

    <div class="display-label">@Html.LabelFor(model => model.ApplyingPeriodEnd)</div>
    <div class="display-field">@Model.ApplyingPeriodEnd.ToShortDateString()</div>

    <div class="display-label">@Html.LabelFor(model => model.GamesStart)</div>
    <div class="display-field">@Model.GamesStart.ToShortDateString()</div>

    <div class="display-label">@Html.LabelFor(model => model.GamesEnd)</div>
    <div class="display-field">@Model.GamesEnd.ToShortDateString()</div>

    @if (Model.IsTransferEnabled)
    {
        <div class="display-label">@Html.LabelFor(model => model.TransferStart)</div>
        <div class="display-field">@(((DateTime)Model.TransferStart).ToShortDateString())</div>

        <div class="display-label">@Html.LabelFor(model => model.TransferEnd)</div>
        <div class="display-field">@(((DateTime)Model.TransferEnd).ToShortDateString())</div>
    }
    @if (Model.Divisions.Count > 1 || Model.Divisions[0].Groups.Count > 1)
    {
        <div class="display-label">@Html.LabelFor(model => model.Divisions)</div>
        for (int i = 0; i < Model.Divisions.Count; i++)
        {
            <div class="display-field">@Html.DisplayFor(model => model.Divisions[i].Name)</div>
            <div class="display-label">&nbsp;&nbsp;&nbsp;@Html.LabelFor(model => model.Divisions[i].Groups)</div>
            for (int j = 0; j < Model.Divisions[i].Groups.Count; j++)
            {
                <div class="display-field">&nbsp;&nbsp;&nbsp;@Html.DisplayFor(model => model.Divisions[i].Groups[j].Name)</div>
            }
        }
    }
</fieldset>
<p>
    @Html.ActionLink(Resources.TournamentViews.Edit, "Edit", new { id = Model.Id }) |
    @Html.ActionLink(Resources.TournamentViews.BackToList, "Index")
</p>
