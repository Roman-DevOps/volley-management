@model VolleyManagement.UI.Areas.Mvc.ViewModels.GameResults.GameViewModel
@using VolleyManagement.Domain.TournamentsAggregate;
@using System.Globalization;

<legend>@Resources.UI.TournamentViews.ScheduleGameLegend</legend>
@Html.ValidationMessage("ValidationError")
@Html.HiddenFor(model => model.TournamentId)

@if (!(Model.TournamentScheme == TournamentSchemeEnum.PlayOff))
{
    <div class="editor-label">
        @Html.LabelFor(model => model.Round)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.Round, Model.Rounds, new { @class = "form-control" })
    </div>
}
else
{
    @Html.HiddenFor(model => model.Round)
    @Html.HiddenFor(model => model.GameNumber);
}


@if (!(Model.TournamentScheme == TournamentSchemeEnum.PlayOff && !Model.IsFirstRoundGame))
{
    <div class="editor-label">
        @Html.LabelFor(model => model.HomeTeamId)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.HomeTeamId, Model.Teams, new { @class = "form-control" })
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.AwayTeamId)
    </div>
    <div class="editor-field">
        @Html.DropDownListFor(model => model.AwayTeamId, Model.Teams, Resources.UI.TournamentViews.FreeDay, new { @class = "form-control" })
    </div>
}
else
{
    @Html.HiddenFor(model => model.HomeTeamId);
    @Html.HiddenFor(model => model.AwayTeamId);
}


<div class="editor-label">
    @Html.LabelFor(model => model.GameDate)
</div>
<div class="form-group editor-field">
    @Html.EditorFor(model => model.GameDate, new { htmlAttributes = new {
    @Value = Model.GameDate.ToString("g", new DateTimeFormatInfo { ShortDatePattern = "dd/MM/yyyy" }),
    @class = "form-control" } })
    @Html.ValidationMessageFor(model => model.GameDate, "", new { @class = "text-danger" })
</div>